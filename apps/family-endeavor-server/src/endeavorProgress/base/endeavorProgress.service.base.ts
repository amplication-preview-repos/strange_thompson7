/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  EndeavorProgress as PrismaEndeavorProgress,
  Kid as PrismaKid,
  Endeavor as PrismaEndeavor,
} from "@prisma/client";

export class EndeavorProgressServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EndeavorProgressCountArgs, "select">
  ): Promise<number> {
    return this.prisma.endeavorProgress.count(args);
  }

  async endeavorProgresses(
    args: Prisma.EndeavorProgressFindManyArgs
  ): Promise<PrismaEndeavorProgress[]> {
    return this.prisma.endeavorProgress.findMany(args);
  }
  async endeavorProgress(
    args: Prisma.EndeavorProgressFindUniqueArgs
  ): Promise<PrismaEndeavorProgress | null> {
    return this.prisma.endeavorProgress.findUnique(args);
  }
  async createEndeavorProgress(
    args: Prisma.EndeavorProgressCreateArgs
  ): Promise<PrismaEndeavorProgress> {
    return this.prisma.endeavorProgress.create(args);
  }
  async updateEndeavorProgress(
    args: Prisma.EndeavorProgressUpdateArgs
  ): Promise<PrismaEndeavorProgress> {
    return this.prisma.endeavorProgress.update(args);
  }
  async deleteEndeavorProgress(
    args: Prisma.EndeavorProgressDeleteArgs
  ): Promise<PrismaEndeavorProgress> {
    return this.prisma.endeavorProgress.delete(args);
  }

  async getKid(parentId: string): Promise<PrismaKid | null> {
    return this.prisma.endeavorProgress
      .findUnique({
        where: { id: parentId },
      })
      .kid();
  }

  async getEndeavor(parentId: string): Promise<PrismaEndeavor | null> {
    return this.prisma.endeavorProgress
      .findUnique({
        where: { id: parentId },
      })
      .endeavor();
  }
}
