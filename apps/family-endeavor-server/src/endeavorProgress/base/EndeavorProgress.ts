/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsEnum,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumEndeavorProgressStatus } from "./EnumEndeavorProgressStatus";
import { Kid } from "../../kid/base/Kid";
import { Endeavor } from "../../endeavor/base/Endeavor";

@ObjectType()
class EndeavorProgress {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumEndeavorProgressStatus,
  })
  @IsEnum(EnumEndeavorProgressStatus)
  @IsOptional()
  @Field(() => EnumEndeavorProgressStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  blueGemsEarned!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  redGemsEarned!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  purpleGemsEarned!: number | null;

  @ApiProperty({
    required: false,
    type: () => Kid,
  })
  @ValidateNested()
  @Type(() => Kid)
  @IsOptional()
  kid?: Kid | null;

  @ApiProperty({
    required: false,
    type: () => Endeavor,
  })
  @ValidateNested()
  @Type(() => Endeavor)
  @IsOptional()
  endeavor?: Endeavor | null;
}

export { EndeavorProgress as EndeavorProgress };
