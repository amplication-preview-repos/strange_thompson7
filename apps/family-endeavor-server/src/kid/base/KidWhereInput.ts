/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { JsonFilter } from "../../util/JsonFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { ParentWhereUniqueInput } from "../../parent/base/ParentWhereUniqueInput";
import { EnumKidGender } from "./EnumKidGender";
import { EndeavorProgressListRelationFilter } from "../../endeavorProgress/base/EndeavorProgressListRelationFilter";
import { PrizeProgressListRelationFilter } from "../../prizeProgress/base/PrizeProgressListRelationFilter";

@InputType()
class KidWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  profilePicture?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  yearOfBirth?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ParentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ParentWhereUniqueInput)
  @IsOptional()
  @Field(() => ParentWhereUniqueInput, {
    nullable: true,
  })
  parent?: ParentWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumKidGender,
  })
  @IsEnum(EnumKidGender)
  @IsOptional()
  @Field(() => EnumKidGender, {
    nullable: true,
  })
  gender?: "Option1";

  @ApiProperty({
    required: false,
    type: () => EndeavorProgressListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EndeavorProgressListRelationFilter)
  @IsOptional()
  @Field(() => EndeavorProgressListRelationFilter, {
    nullable: true,
  })
  endeavorProgresses?: EndeavorProgressListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PrizeProgressListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PrizeProgressListRelationFilter)
  @IsOptional()
  @Field(() => PrizeProgressListRelationFilter, {
    nullable: true,
  })
  prizeProgresses?: PrizeProgressListRelationFilter;
}

export { KidWhereInput as KidWhereInput };
